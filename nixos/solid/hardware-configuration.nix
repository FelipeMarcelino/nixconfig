# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:
{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "ahci"
    "nvme"
    "thunderbolt"
    "usbhid"
    "usb_storage"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [
    "bluetooth"
    "btusb"
    "btintel"
    "btrtl"
    "btbcm"
    "btmtk"
    # Required for BAP/ISO
    "bluetooth_iso"
    "bt_iso"
  ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/86b62c29-22bb-4450-940b-daa5eb7f294f";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-d6fbbfaa-2122-4b39-b2a2-6082664a2c20".device =
    "/dev/disk/by-uuid/d6fbbfaa-2122-4b39-b2a2-6082664a2c20";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/BD69-4243";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/4138adf2-ffc5-4782-9654-0253630f9791";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-e0dd1a53-5900-4382-a62e-519acbc6b9b0".device =
    "/dev/disk/by-uuid/e0dd1a53-5900-4382-a62e-519acbc6b9b0";

  fileSystems."/home/felipemarcelino/Data" = {
    device = "/dev/disk/by-uuid/88710f5c-2eb2-4625-a42c-0c181c9c712c";
    fsType = "ext4";
  };

  fileSystems."/var/lib/private/ollama/models" = {
    device = "/home/felipemarcelino/Data/ollama";
    fsType = "none";
    options = [ "bind" ];
  };

  swapDevices = [
    { device = "/dev/disk/by-uuid/a556a007-bb09-4c5d-ade4-42bb214faf1d"; }
    { device = "/dev/disk/by-uuid/accba802-6230-4f4b-babc-5007dc1e7eaf"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp8s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp6s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
